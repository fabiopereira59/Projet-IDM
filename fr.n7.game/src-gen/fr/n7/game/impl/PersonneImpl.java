/**
 * generated by Xtext 2.23.0
 */
package fr.n7.game.impl;

import fr.n7.game.Condition;
import fr.n7.game.GamePackage;
import fr.n7.game.Interaction;
import fr.n7.game.Personne;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Personne</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.game.impl.PersonneImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.n7.game.impl.PersonneImpl#getVisible <em>Visible</em>}</li>
 *   <li>{@link fr.n7.game.impl.PersonneImpl#getObligatoire <em>Obligatoire</em>}</li>
 *   <li>{@link fr.n7.game.impl.PersonneImpl#getPersonneElements <em>Personne Elements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PersonneImpl extends MinimalEObjectImpl.Container implements Personne
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getVisible() <em>Visible</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisible()
   * @generated
   * @ordered
   */
  protected Condition visible;

  /**
   * The cached value of the '{@link #getObligatoire() <em>Obligatoire</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObligatoire()
   * @generated
   * @ordered
   */
  protected Condition obligatoire;

  /**
   * The cached value of the '{@link #getPersonneElements() <em>Personne Elements</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPersonneElements()
   * @generated
   * @ordered
   */
  protected Interaction personneElements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PersonneImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.PERSONNE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.PERSONNE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition getVisible()
  {
    if (visible != null && visible.eIsProxy())
    {
      InternalEObject oldVisible = (InternalEObject)visible;
      visible = (Condition)eResolveProxy(oldVisible);
      if (visible != oldVisible)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GamePackage.PERSONNE__VISIBLE, oldVisible, visible));
      }
    }
    return visible;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Condition basicGetVisible()
  {
    return visible;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisible(Condition newVisible)
  {
    Condition oldVisible = visible;
    visible = newVisible;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.PERSONNE__VISIBLE, oldVisible, visible));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition getObligatoire()
  {
    if (obligatoire != null && obligatoire.eIsProxy())
    {
      InternalEObject oldObligatoire = (InternalEObject)obligatoire;
      obligatoire = (Condition)eResolveProxy(oldObligatoire);
      if (obligatoire != oldObligatoire)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GamePackage.PERSONNE__OBLIGATOIRE, oldObligatoire, obligatoire));
      }
    }
    return obligatoire;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Condition basicGetObligatoire()
  {
    return obligatoire;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObligatoire(Condition newObligatoire)
  {
    Condition oldObligatoire = obligatoire;
    obligatoire = newObligatoire;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.PERSONNE__OBLIGATOIRE, oldObligatoire, obligatoire));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Interaction getPersonneElements()
  {
    return personneElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPersonneElements(Interaction newPersonneElements, NotificationChain msgs)
  {
    Interaction oldPersonneElements = personneElements;
    personneElements = newPersonneElements;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GamePackage.PERSONNE__PERSONNE_ELEMENTS, oldPersonneElements, newPersonneElements);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPersonneElements(Interaction newPersonneElements)
  {
    if (newPersonneElements != personneElements)
    {
      NotificationChain msgs = null;
      if (personneElements != null)
        msgs = ((InternalEObject)personneElements).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GamePackage.PERSONNE__PERSONNE_ELEMENTS, null, msgs);
      if (newPersonneElements != null)
        msgs = ((InternalEObject)newPersonneElements).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GamePackage.PERSONNE__PERSONNE_ELEMENTS, null, msgs);
      msgs = basicSetPersonneElements(newPersonneElements, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.PERSONNE__PERSONNE_ELEMENTS, newPersonneElements, newPersonneElements));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GamePackage.PERSONNE__PERSONNE_ELEMENTS:
        return basicSetPersonneElements(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.PERSONNE__NAME:
        return getName();
      case GamePackage.PERSONNE__VISIBLE:
        if (resolve) return getVisible();
        return basicGetVisible();
      case GamePackage.PERSONNE__OBLIGATOIRE:
        if (resolve) return getObligatoire();
        return basicGetObligatoire();
      case GamePackage.PERSONNE__PERSONNE_ELEMENTS:
        return getPersonneElements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.PERSONNE__NAME:
        setName((String)newValue);
        return;
      case GamePackage.PERSONNE__VISIBLE:
        setVisible((Condition)newValue);
        return;
      case GamePackage.PERSONNE__OBLIGATOIRE:
        setObligatoire((Condition)newValue);
        return;
      case GamePackage.PERSONNE__PERSONNE_ELEMENTS:
        setPersonneElements((Interaction)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.PERSONNE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GamePackage.PERSONNE__VISIBLE:
        setVisible((Condition)null);
        return;
      case GamePackage.PERSONNE__OBLIGATOIRE:
        setObligatoire((Condition)null);
        return;
      case GamePackage.PERSONNE__PERSONNE_ELEMENTS:
        setPersonneElements((Interaction)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.PERSONNE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GamePackage.PERSONNE__VISIBLE:
        return visible != null;
      case GamePackage.PERSONNE__OBLIGATOIRE:
        return obligatoire != null;
      case GamePackage.PERSONNE__PERSONNE_ELEMENTS:
        return personneElements != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //PersonneImpl
